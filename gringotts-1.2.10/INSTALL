			-= Gringotts installation instructions =-

Hi!
	you may have downloaded gringotts mainly in three forms: the
CVS repository image, the tarball or an RPM file. Here is how to handle
each of them:

							-= CVS=-
							
You can access to cvs repository of Pluto-devel with these data:

CVSROOT:	:pserver:anonymous@cvs.pluto.linux.it:/Devel
password:	anonymous

the directory to checkout is called "gringotts". If you download
Gringotts from CVS, it will miss all the various files generated
by the GNU build tools. So, you need to re-create them. In order
to do this, you'll need:

  Autoconf >= 2.52
  Automake  = 1.4.* or 1.6.*

now, cd to the gringotts dir and type:

  sh autogen.sh
  ./configure
  make dist

after these steps, you should have in your current directory a file
called gringotts-x.y.z.tar.gz. Please read the next section to
learn how to handle it.

						  -= Tarball =-

So, you have a tar file, hm? These instructions will deal with a

gringotts-x.y.z.tar.gz

file; if you've a .tar.bz2 one, you should know how to adapt them to
it. If not, just do a

  bunzip2 gringotts-x.y.z.tar.bz2
  gzip --best gringotts-x.y.z.tar

to convert it. Well, please unarchive it and go to its dir:

  tar xzf gringotts-x.y.z.tar.gz
  cd gringotts-x.y.z

in order to compile it, you will need:

  Gtk+ 2 (>= 1.3.13)
    http://www.gtk.org

  libGringotts
    http://www.prosa.com/people/grizzo/libgringotts/

the specified package versions are simply those I use; if you have
older versions, gringotts may or may not compile. Once checked this,
do a simple

  ./configure
  make
  make install

sequence to install it. You may want to specify some options to the
configure script; type ./configure --help to learn more.

./configure currently accepts 4 non-standard options:

--enable-env-check
	at startup, it checks the environment variables, and reset
	them to safe values. Necessary for a safe use of Gringotts,
	but in some (rare) cases it can lead to incompatibilities.

--enable-root-filter
	normally, root user can't start Gringotts. This can be
	avoided specifying a Gringotts commandline option; if you 
	want to make this unavoidable, use this ./configure switch.

--enable-maintainer-mode
	this enables some checks (assertions, MALLOC_CHECK_ env var)
	useful for programmers, but unneeded to end users.

To build an RPM package from the tarball, simply do:

  rpm -tb --clean gringotts-x.y.z.tar.bz2

or, in a rpm 4.1-based system such as RedHat 8.0,

  rpmbuild -tb --clean gringotts-x.y.z.tar.bz2

to build a binary package; notice that you'll need the bz2 tarball
(simply recompress it if you have a gz one). "-ts" will build a
source RPM. After this, read on.

							-= RPM =-

Finally, let's suppose you have an RPM. Gringotts behave just normally,
so to compile a source RPM you'll do:

  rpm --rebuild gringotts-x.y.z-1.src.rpm
  
or, in a rpm 4.1-based system such as RedHat 8.0,

  rpmbuild --rebuild gringotts-x.y.z-1.src.rpm

To specify some configure flags for the compilation process, set the
variable $GRG_COMPILE_FLAGS:

  GRG_COMPILE_FLAGS="--enable-root-filter" rpm --rebuild [...]

To install the binary one, you can do:

  rpm -Uvh gringotts-x.y.z-1.i386.rpm

easy, ain't it? Here we are, have fun!

	-- Mano :)
